name: PR Check with SonarQube and Reviewer

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build-and-sonarqube:
    name: SonarQube Report
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 22.16.0

      - name: Install dependencies
        run: npm ci

      - name: Build Angular project
        run: npm run build

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Check SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@master
        id: qualitygate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  reviewer-approval:
    name: Reviewer Approval
    runs-on: ubuntu-latest
    needs: build-and-sonarqube  # ✅ Run only if SonarQube succeeds
    if: ${{ needs.build-and-sonarqube.result == 'success' }}

    steps:
      - name: Check Reviewer Approval
        uses: actions/github-script@v6
        env:
          REVIEWER_NAME: ${{ secrets.REVIEWER_NAME }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewers = process.env.REVIEWER_NAME.split(',').map(r => r.trim());

            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const approvedBy = reviews
              .filter(r => r.state === 'APPROVED')
              .map(r => r.user.login);

            const isApproved = reviewers.some(user => approvedBy.includes(user));

            if (!isApproved) {
              core.setFailed(`❌ PR must be approved by: ${reviewers.join(', ')}. Approved by: ${approvedBy.join(', ') || 'no one'}`);
            } else {
              console.log(`✅ Approved by: ${approvedBy.join(', ')}`);
            }